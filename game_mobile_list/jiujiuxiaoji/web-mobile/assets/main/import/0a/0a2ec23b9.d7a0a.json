[1,["30gH3C0XdMTbzMbtTKF8ki@f9941","37pWDu/y9K4riJCPU/L4tx","d2IGOVRVtJE6VyfGHpZDru@f9941","2dshUdjzJPvIlVrg97Ulgf@f9941","b1+Lx11vVHtavdAhx4I1U6@f9941","cfjMEOWPpFI71xVgqFohF7@f9941","97Riu+iuJNDovwahUZDhRo@f9941","d1mxZ+Em5DtLPIGtqr1IL1@f9941","73dCTNvuhBmLLZT9Ki64fn","e2lEagD+5M4r4zSBoi1GDx@f9941"],["node","penSF","_spriteFrame","_effectAsset","_cameraComponent","root","load","grid","scene","_parent","sprite","_customMaterial"],[["cc.Node",["_name","_layer","_id","_objFlags","_components","_parent","_lpos","_children","_lscale"],-1,9,1,5,2,5],["cc.Sprite",["_sizeMode","_type","node","_spriteFrame","_color"],1,1,6,5],["cc.Node",["_name","_objFlags","_layer","_parent","_components"],0,1,12],["cc.Widget",["_alignFlags","_left","_right","_top","_bottom","_originalWidth","_originalHeight","node"],-4,1],["cc.Camera",["_projection","_orthoHeight","_near","_far","_visibility","_priority","_color","node"],-3,5,1],["penConfig",["penName","penColor","penSF"],2,5,6],["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Material",["_name","_states","_defines","_props"],0,12],["cc.SceneAsset",["_name"],2],["cc.Node",["_name","_objFlags","_parent","_components","_lpos"],1,1,2,5],["cc.UITransform",["node","_contentSize"],3,1,5],["cc.Canvas",["node","_cameraComponent"],3,1,1],["1e0adWjukFNxKV1Icu8Lw/A",["tweenView","playBtnClip","showBannerAd","bannerDelay","node","root"],-1,1,1],["91714+LEbNFq5BWdU9PslLO",["node","load"],3,1,1],["cc.Scene",["_name","_children","_prefab","_globals"],2,2,4,4],["cc.PrefabInfo",["fileId","targetOverrides"],1],["cc.SceneGlobals",["ambient","shadows","_skybox","fog","octree"],3,4,4,4,4,4],["cc.AmbientInfo",["_skyIllumHDR","_skyColorHDR","_groundAlbedoHDR"],2,5,5],["cc.ShadowsInfo",["_shadowColor","_size"],3,5,5],["cc.SkyboxInfo",[],3],["cc.FogInfo",[],3],["cc.OctreeInfo",[],3],["87552Srt+JLU6pT/AOmo82E",["node","mainCam"],3,1,1],["5851e4Oe/VNRp/6qH6dPqUm",["addEnergy","maxLevel","highPerformance","node","Platforms","Shares","penConfigs","grid","HomeView"],0,1,9,9,9,1,1],["adConfig",["videoId","intersitialId","bannerId"],0],["shareConfig",["sharePics"],3,9],["shareContent",["shareId","shareLink","shareText"],0],["960eb/0yIBBhKoSH4h5i4Eq",["node"],3,1]],[[10,0,1,1],[5,1,2,1],[5,0,1,2,2],[26,0,1,2,4],[6,0,1,2,4],[7,0,1,2,3,4],[8,0,2],[0,0,1,2,7,4,6,4],[0,0,1,5,7,4,3],[0,0,1,5,7,4,6,3],[0,0,3,5,4,6,3],[0,0,1,5,4,6,8,3],[0,0,1,5,4,3],[0,0,2,5,4,3],[2,0,1,3,4,3],[2,0,2,3,4,3],[9,0,1,2,3,4,3],[11,0,1,1],[3,0,1,2,3,4,7,6],[3,0,5,6,7,4],[12,0,1,2,3,4,5,5],[13,0,1,1],[14,0,1,2,3,2],[15,0,1,3],[16,0,1,2,3,4,1],[17,0,1,2,2],[18,0,1,1],[19,1],[20,1],[21,1],[4,0,5,1,2,3,4,6,7],[4,0,1,2,3,4,7,6,6],[22,0,1,1],[1,2,3,1],[1,1,0,2,3,3],[1,1,0,2,3],[1,0,2,4,2],[23,0,1,2,3,4,5,6,7,8,4],[24,0,1,2,4],[25,0,1],[27,0,1]],[[[[4,"../Shaders/Effect/grid-effect",[{"hash":1878007899,"name":"../Shaders/Effect/grid-effect|sprite-vs:vert|sprite-fs:frag","blocks":[{"name":"TexCoords","stageFlags":16,"binding":0,"members":[{"name":"select","type":16,"count":1},{"name":"warn","type":16,"count":1},{"name":"paperColor","type":16,"count":1},{"name":"lightColor","type":16,"count":1},{"name":"ambientColor","type":16,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]},{"name":"a_color","format":44,"location":2,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"glsl1":{"vert":"\nprecision highp float;\nuniform highp mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 color;\nvarying vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  uv0 = a_texCoord;\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\n  precision mediump float;\n  vec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n  #if CC_USE_EMBEDDED_ALPHA\n    return vec4(texture2D(tex, uv).rgb, texture2D(tex, uv + vec2(0.0, 0.5)).r);\n  #else\n    return texture2D(tex, uv);\n  #endif\n  }\n  varying vec4 color;\n  varying vec2 uv0;\n      uniform vec4 select;\n    uniform vec4 warn;\n    uniform vec4 paperColor;\n    uniform vec4 lightColor;\n    uniform vec4 ambientColor;\n  #if USE_TEXTURE\n    uniform sampler2D cc_spriteTexture;\n  #endif\nfloat rand(float n)\n{\n   return fract(cos(n*89.42)*343.42);\n}\nvec2 rand(vec2 n)\n{\n   return vec2(rand(n.x*23.62-300.0+n.y*34.35),rand(n.x*45.13+256.0+n.y*38.89));\n}\nvec3 worley(vec2 n,float s)\n{\n    vec3 ret = vec3(s * 10.);\n    for(int x = -1;x<2;x++)\n    {\n        for(int y = -1;y<2;y++)\n        {\n            vec2 xy = vec2(x,y);\n            vec2 cellIndex = floor(n/s) + xy;\n            vec2 worleyPoint = rand(cellIndex);\n            worleyPoint += xy - fract(n/s);\n            float d = length(worleyPoint) * s;\n            if(d < ret.z)\n                ret = vec3(worleyPoint, d);\n        }\n    }\n    return ret;\n}\nvec4 applyLighting(vec4 inpColor, vec2 uv, vec3 normal, vec3 LightPos, vec4 LightColor, vec4 AmbientColor)\n{\n    vec3 LightDir = vec3(LightPos.xy - uv, LightPos.z);\n    vec3 N = normalize(normal);\n    vec3 L = normalize(LightDir);\n    vec3 Diffuse = (LightColor.rgb * LightColor.a) * max(dot(N, L), 0.0);\n    vec3 Ambient = AmbientColor.rgb * AmbientColor.a;\n    vec3 Intensity = Ambient + Diffuse;\n    vec3 FinalColor = inpColor.rgb * Intensity;\n    return vec4(FinalColor, inpColor.a);\n}\nfloat dtoa(float d)\n{\n    const float amount = 800.0;\n    return clamp(1.0 / (clamp(d, 1.0/amount, 1.0)*amount), 0.,1.);\n}\nfloat grid_d(vec2 uv, vec2 gridSize, float gridLineWidth)\n{\n    uv += gridLineWidth / 2.0;\n    uv = mod(uv, gridSize);\n    vec2 halfRemainingSpace = (gridSize - gridLineWidth) / 2.0;\n    uv -= halfRemainingSpace + gridLineWidth;\n    uv = abs(uv);\n    uv = -(uv - halfRemainingSpace);\n    return min(uv.x, uv.y);\n}\nvec2 getuv(vec2 fragCoord, vec2 newTL, out float vignetteAmt)\n{\n    vec2 ret = fragCoord;\n    ret.y = 1. - ret.y;\n    vec2 vignetteCenter = vec2(0.5, 0.5);\n    vignetteAmt = 1.0 - distance(ret, vignetteCenter);\n    vignetteAmt = 0.03 + pow(vignetteAmt, .2);\n    vignetteAmt = clamp(vignetteAmt, 0.,1.);\n    ret.y *= 2.2;\n    return ret ;\n}\n  vec4 frag () {\n    vec4 fragColor;\n    #if USE_TEXTURE\n    fragColor= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n    #else\n    fragColor = paperColor;\n    #endif\n    float vignetteAmt;\n    vec2 u = getuv(uv0, vec2(-1.,1.), vignetteAmt);\n    float d = grid_d(u, vec2(0.1), 0.0002);\n    fragColor = vec4(mix(fragColor.rgb, color.rgb, color.a * dtoa(d)), 1.);\n    if(u.x>select.x && u.x<select.y && u.y>select.z && u.y<select.w) fragColor.rgb = vec3(1.,1.,0.7);\n    if(u.x>warn.x && u.x<warn.y && u.y>warn.z && u.y<warn.w) fragColor.rgb = vec3(1.,0.1,0.1);\n    #if USE_WORLY\n    float wsize = 0.45;\n    const int iterationCount = 4;\n    vec2 normal = vec2(0.0);\n    float influenceFactor = 1.7;\n    for(int i = 0; i < iterationCount; ++ i)\n    {\n        vec3 w = worley(u, wsize);\n        normal.xy += influenceFactor * w.xy;\n        wsize *= 0.6;\n        influenceFactor *= 0.9;\n    }\n    vec2 mouse = vec2(.5);\n    vec3 lightPos = vec3(mouse, 8.);\n    fragColor = applyLighting(fragColor, u, vec3(normal, 5.), lightPos, lightColor, ambientColor);\n    #endif\n    #if USE_VIGNETTE\n    fragColor.rgb *= vignetteAmt;\n    #endif\n    return fragColor;\n  }\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[],"samplerTextures":[{"name":"cc_spriteTexture","defines":["USE_TEXTURE"]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":44,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":49}},"defines":[{"name":"CC_USE_EMBEDDED_ALPHA","type":"boolean"},{"name":"USE_TEXTURE","type":"boolean"},{"name":"USE_WORLY","type":"boolean"},{"name":"USE_VIGNETTE","type":"boolean"}]}],[{"name":"Miaomiao's Paper","passes":[{"program":"../Shaders/Effect/grid-effect|sprite-vs:vert|sprite-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false},"properties":{"select":{"type":16,"value":[0,0,0,0]},"warn":{"type":16,"value":[0,0,0,0]},"paperColor":{"linear":true,"type":16,"value":[0.94,0.96,0.78,1]},"lightColor":{"linear":true,"type":16,"value":[0.99,0.99,0.95,0.6]},"ambientColor":{"linear":true,"type":16,"value":[0.99,0.99,0.95,0.5]}}}]}]]],0,0,[],[],[]],[[[5,"GridPaper",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_WORLY":true,"USE_VIGNETTE":true}],[[[{},"paperColor",8,[4,4293984253],"lightColor",8,[4,2331180284],"ambientColor",8,[4,2364734716]]],11]]],0,0,[0],[3],[1]],[[[6,"game-scene"],[7,"Canvas",33554432,"beI88Z2HpFELqR4T5EMHpg",[-5,-6,-7,-8,-9],[[0,-1,[5,750,1334]],[17,-3,-2],[18,45,-5.684341886080802e-14,-5.684341886080802e-14,5.684341886080802e-14,5.684341886080802e-14,-4]],[1,374.99999999999994,667,0]],[8,"HomeView",33554432,1,[-14],[[0,-10,[5,750,1334]],[19,45,100,100,-11],[20,false,false,true,0.5,-13,-12]]],[9,"LoadingView",33554432,1,[-18,-19],[[0,-15,[5,600,12]],[21,-17,-16]],[1,0,-260,0]],[14,"GridPaper",512,1,[[[0,-20,[5,750,1650]],-21,-22],4,1,1]],[22,"game-scene",[-23,1],[23,"ffa53346-821d-4abc-a8f0-d1e554ca50b8",[]],[24,[25,30000,[2,0.8549019607843137,0.8352941176470589,0.9921568627450981,0.7812496875],[2,0.10196078431372549,0.00392156862745098,0.8,1]],[26,[4,4283190348],[0,512,512]],[27],[28],[29]]],[30,0,1,667,0,2000,1107296256,[4,4278190080]],[10,"ScreenCam",512,1,[[31,0,667,0,2000,0,-24,[4,4278190080]],[32,-25,6]],[1,0,0,1000]],[11,"logo",33554432,2,[[0,-26,[5,498,271]],[33,-27,8]],[1,0,360,0],[1,1.05,1.05,1]],[12,"loadbg",33554432,3,[[0,-28,[5,610,18]],[34,1,0,-29,9]]],[15,"loadfill",33554432,3,[[[0,-30,[5,600,9]],-31],4,1]],[13,"main","e9z9HDp5lBBKhlzfR05l7j",5,[[37,10,15,true,-33,[[38,["adunit-7d137d86e19a24f2"],["adunit-5129b5b188ef671c"],["adunit-a84a688fe1a9dd3c"]]],[[39,[[3,"WW2PYDQBR2+2n1e05066xQ==\t","https://mmocgame.qpic.cn/wechatgame/QdFKpXpcRxCc4RTCAqiawSGZ0Jq5ISFLaARtrmSLwpSFItQoBWAhEJzT3QFuibTnpm/0","这一关也太难了！！"],[3,"WW2PYDQBR2+2n1e05066xQ==\t","https://mmocgame.qpic.cn/wechatgame/QdFKpXpcRxCc4RTCAqiawSGZ0Jq5ISFLaARtrmSLwpSFItQoBWAhEJzT3QFuibTnpm/0","听说要高智商才能过！！"]]]],[[1,[4,4281084972],0],[1,[4,4294947111],1],[1,[4,4284352969],2],[1,[4,4278248428],3],[1,[4,4289468779],4],[2,"3D",[4,4294967295],5],[2,"Rainbow",[4,4294967295],6],[2,"Bloom",[4,4294967295],7]],-32,2]]],[40,4],[16,"Camera",512,1,[6],[1,0,0,1000]],[35,3,0,10],[36,0,4,[4,350659696]]],0,[0,0,1,0,4,6,0,0,1,0,0,1,0,-1,13,0,-2,7,0,-3,4,0,-4,2,0,-5,3,0,0,2,0,0,2,0,5,2,0,0,2,0,-1,8,0,0,3,0,6,14,0,0,3,0,-1,9,0,-2,10,0,0,4,0,-2,15,0,-3,12,0,-1,11,0,0,7,0,0,7,0,0,8,0,0,8,0,0,9,0,0,9,0,0,10,0,-2,14,0,7,12,0,0,11,0,8,5,1,9,5,6,0,13,12,10,15,33],[0,0,0,0,0,0,0,0,0,0,14,15,15],[1,1,1,1,1,1,1,1,2,2,2,11,2],[0,0,0,0,0,2,3,4,5,6,7,8,9]]]]
