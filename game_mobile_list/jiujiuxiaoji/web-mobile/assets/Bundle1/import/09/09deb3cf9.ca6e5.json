[1,["25vI7cOdlDbaczDZZYfdZz"],["_effectAsset"],[["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Material",["_name","_props","_states","_defines"],-1]],[[0,0,1,2,4],[1,0,1,2,3,5]],[[[[0,"../Shaders/Effect/Graphic-3D",[{"hash":254513178,"name":"../Shaders/Effect/Graphic-3D|vs:vert|fs:frag","blocks":[{"name":"Constants","stageFlags":16,"binding":0,"members":[{"name":"lightPos","type":14,"count":1},{"name":"lineWidth","type":13,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_color","format":44,"location":1,"defines":[]},{"name":"a_dist","format":11,"location":2,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"glsl1":{"vert":"\nprecision highp float;\nuniform highp mat4 cc_matViewProj;\nuniform highp mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nattribute float a_dist;\nvarying float v_dist;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * cc_matWorld * pos;\n  v_dist = a_dist;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\n#extension GL_OES_standard_derivatives : enable\nprecision highp float;\nvarying float v_dist;\n   uniform vec2 lightPos;\n   uniform float lineWidth;\nvec4 frag () {\n  float maxDist = lineWidth / 4.;\n  float D = abs(v_dist) * 2.0 - 1.0;\n  D *= -maxDist;\n  float aastep = fwidth(D);\n  float aaMask = smoothstep(-aastep, aastep, abs(D) - 1.0);\n  vec2 delta = vec2(dFdx(D), dFdy(D));\n  float brightNess = dot(normalize(delta), normalize(-lightPos));\n  brightNess = clamp(brightNess, 0.15, 0.85);\n  float w = maxDist / 2.;\n  float edgeMask = smoothstep(aastep, -aastep, abs(D + w) - w);\n  float insideMask = smoothstep(-aastep, aastep, D);\n  vec3 color = vec3(brightNess * edgeMask) + vec3(1.0) * insideMask;\n  color *= vec3(1., 213./255., 0.);\n  float finalMask = (edgeMask + insideMask);\n  return vec4(color * finalMask, finalMask);\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":54,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":46}},"defines":[]}],[{"passes":[{"program":"../Shaders/Effect/Graphic-3D|vs:vert|fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":1,"blendDst":4,"blendSrcAlpha":1,"blendDstAlpha":4}]},"rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false},"properties":{"lightPos":{"type":14,"value":[1,-1]},"lineWidth":{"type":13,"value":[40]}}}]}]]],0,0,[],[],[]],[[[1,"3D",[{}],[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}]]],0,0,[0],[0],[0]]]]
